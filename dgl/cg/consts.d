module dgl.cg.consts;


alias int CGbool;
const CGbool CG_FALSE = 0;
const CGbool CG_TRUE = 1;

typedef void *CGcontext;
typedef void *CGprogram;
typedef void *CGparameter;
typedef void *CGobj;
typedef void *CGbuffer;
typedef void *CGeffect;
typedef void *CGtechnique;
typedef void *CGpass;
typedef void *CGstate;
typedef void *CGstateassignment;
typedef void *CGannotation;
typedef void *CGhandle;


enum {
    CG_UNKNOWN_TYPE,
    CG_STRUCT,
    CG_ARRAY,
    CG_TYPELESS_STRUCT,
    CG_TYPE_START_ENUM = 1024,
    CG_HALF,
    CG_HALF2,
    CG_HALF3,
    CG_HALF4,
    CG_HALF1x1,
    CG_HALF1x2,
    CG_HALF1x3,
    CG_HALF1x4,
    CG_HALF2x1,
    CG_HALF2x2,
    CG_HALF2x3,
    CG_HALF2x4,
    CG_HALF3x1,
    CG_HALF3x2,
    CG_HALF3x3,
    CG_HALF3x4,
    CG_HALF4x1,
    CG_HALF4x2,
    CG_HALF4x3,
    CG_HALF4x4,
    CG_FLOAT,
    CG_FLOAT2,
    CG_FLOAT3,
    CG_FLOAT4,
    CG_FLOAT1x1,
    CG_FLOAT1x2,
    CG_FLOAT1x3,
    CG_FLOAT1x4,
    CG_FLOAT2x1,
    CG_FLOAT2x2,
    CG_FLOAT2x3,
    CG_FLOAT2x4,
    CG_FLOAT3x1,
    CG_FLOAT3x2,
    CG_FLOAT3x3,
    CG_FLOAT3x4,
    CG_FLOAT4x1,
    CG_FLOAT4x2,
    CG_FLOAT4x3,
    CG_FLOAT4x4,
    CG_SAMPLER1D,
    CG_SAMPLER2D,
    CG_SAMPLER3D,
    CG_SAMPLERRECT,
    CG_SAMPLERCUBE,
    CG_FIXED,
    CG_FIXED2,
    CG_FIXED3,
    CG_FIXED4,
    CG_FIXED1x1,
    CG_FIXED1x2,
    CG_FIXED1x3,
    CG_FIXED1x4,
    CG_FIXED2x1,
    CG_FIXED2x2,
    CG_FIXED2x3,
    CG_FIXED2x4,
    CG_FIXED3x1,
    CG_FIXED3x2,
    CG_FIXED3x3,
    CG_FIXED3x4,
    CG_FIXED4x1,
    CG_FIXED4x2,
    CG_FIXED4x3,
    CG_FIXED4x4,
    CG_HALF1,
    CG_FLOAT1,
    CG_FIXED1,
    CG_INT,
    CG_INT1,
    CG_INT2,
    CG_INT3,
    CG_INT4,
    CG_INT1x1,
    CG_INT1x2,
    CG_INT1x3,
    CG_INT1x4,
    CG_INT2x1,
    CG_INT2x2,
    CG_INT2x3,
    CG_INT2x4,
    CG_INT3x1,
    CG_INT3x2,
    CG_INT3x3,
    CG_INT3x4,
    CG_INT4x1,
    CG_INT4x2,
    CG_INT4x3,
    CG_INT4x4,
    CG_BOOL,
    CG_BOOL1,
    CG_BOOL2,
    CG_BOOL3,
    CG_BOOL4,
    CG_BOOL1x1,
    CG_BOOL1x2,
    CG_BOOL1x3,
    CG_BOOL1x4,
    CG_BOOL2x1,
    CG_BOOL2x2,
    CG_BOOL2x3,
    CG_BOOL2x4,
    CG_BOOL3x1,
    CG_BOOL3x2,
    CG_BOOL3x3,
    CG_BOOL3x4,
    CG_BOOL4x1,
    CG_BOOL4x2,
    CG_BOOL4x3,
    CG_BOOL4x4,
    CG_STRING,
    CG_PROGRAM_TYPE,
    CG_TEXTURE,
    CG_SAMPLER1DARRAY,
    CG_SAMPLER2DARRAY,
    CG_SAMPLERCUBEARRAY,
    CG_VERTEXSHADER_TYPE,
    CG_PIXELSHADER_TYPE,
    CG_SAMPLER,
    CG_SAMPLERBUF,
}
alias int CGtype;



enum
{
    CG_TEXUNIT0 = 2048,
    CG_TEXUNIT1,
    CG_TEXUNIT2,
    CG_TEXUNIT3,
    CG_TEXUNIT4,
    CG_TEXUNIT5,
    CG_TEXUNIT6,
    CG_TEXUNIT7,
    CG_TEXUNIT8,
    CG_TEXUNIT9,
    CG_TEXUNIT10,
    CG_TEXUNIT11,
    CG_TEXUNIT12,
    CG_TEXUNIT13,
    CG_TEXUNIT14,
    CG_TEXUNIT15,
    CG_BUFFER0,
    CG_BUFFER1,
    CG_BUFFER2,
    CG_BUFFER3,
    CG_BUFFER4,
    CG_BUFFER5,
    CG_BUFFER6,
    CG_BUFFER7,
    CG_BUFFER8,
    CG_BUFFER9,
    CG_BUFFER10,
    CG_BUFFER11,
    CG_ATTR0 = 2113,
    CG_ATTR1,
    CG_ATTR2,
    CG_ATTR3,
    CG_ATTR4,
    CG_ATTR5,
    CG_ATTR6,
    CG_ATTR7,
    CG_ATTR8,
    CG_ATTR9,
    CG_ATTR10,
    CG_ATTR11,
    CG_ATTR12,
    CG_ATTR13,
    CG_ATTR14,
    CG_ATTR15,
    CG_C = 2178,
    CG_TEX0,
    CG_TEX1,
    CG_TEX2,
    CG_TEX3 = 2192,
    CG_TEX4,
    CG_TEX5,
    CG_TEX6,
    CG_TEX7,
    CG_HPOS = 2243,
    CG_COL0 = 2245,
    CG_COL1,
    CG_COL2,
    CG_COL3,
    CG_PSIZ = 2309,
    CG_CLP0,
    CG_CLP1,
    CG_CLP2,
    CG_CLP3,
    CG_CLP4,
    CG_CLP5,
    CG_WPOS = 2373,
    CG_POINTCOORD,
    CG_POSITION0 = 2437,
    CG_POSITION1,
    CG_POSITION2,
    CG_POSITION3,
    CG_POSITION4,
    CG_POSITION5,
    CG_POSITION6,
    CG_POSITION7,
    CG_POSITION8,
    CG_POSITION9,
    CG_POSITION10,
    CG_POSITION11,
    CG_POSITION12,
    CG_POSITION13,
    CG_POSITION14,
    CG_POSITION15,
    CG_DIFFUSE0 = 2501,
    CG_TANGENT0 = 2565,
    CG_TANGENT1,
    CG_TANGENT2,
    CG_TANGENT3,
    CG_TANGENT4,
    CG_TANGENT5,
    CG_TANGENT6,
    CG_TANGENT7,
    CG_TANGENT8,
    CG_TANGENT9,
    CG_TANGENT10,
    CG_TANGENT11,
    CG_TANGENT12,
    CG_TANGENT13,
    CG_TANGENT14,
    CG_TANGENT15,
    CG_SPECULAR0 = 2629,
    CG_BLENDINDICES0 = 2693,
    CG_BLENDINDICES1,
    CG_BLENDINDICES2,
    CG_BLENDINDICES3,
    CG_BLENDINDICES4,
    CG_BLENDINDICES5,
    CG_BLENDINDICES6,
    CG_BLENDINDICES7,
    CG_BLENDINDICES8,
    CG_BLENDINDICES9,
    CG_BLENDINDICES10,
    CG_BLENDINDICES11,
    CG_BLENDINDICES12,
    CG_BLENDINDICES13,
    CG_BLENDINDICES14,
    CG_BLENDINDICES15,
    CG_COLOR0 = 2757,
    CG_COLOR1,
    CG_COLOR2,
    CG_COLOR3,
    CG_COLOR4,
    CG_COLOR5,
    CG_COLOR6,
    CG_COLOR7,
    CG_COLOR8,
    CG_COLOR9,
    CG_COLOR10,
    CG_COLOR11,
    CG_COLOR12,
    CG_COLOR13,
    CG_COLOR14,
    CG_COLOR15,
    CG_PSIZE0 = 2821,
    CG_PSIZE1,
    CG_PSIZE2,
    CG_PSIZE3,
    CG_PSIZE4,
    CG_PSIZE5,
    CG_PSIZE6,
    CG_PSIZE7,
    CG_PSIZE8,
    CG_PSIZE9,
    CG_PSIZE10,
    CG_PSIZE11,
    CG_PSIZE12,
    CG_PSIZE13,
    CG_PSIZE14,
    CG_PSIZE15,
    CG_BINORMAL0 = 2885,
    CG_BINORMAL1,
    CG_BINORMAL2,
    CG_BINORMAL3,
    CG_BINORMAL4,
    CG_BINORMAL5,
    CG_BINORMAL6,
    CG_BINORMAL7,
    CG_BINORMAL8,
    CG_BINORMAL9,
    CG_BINORMAL10,
    CG_BINORMAL11,
    CG_BINORMAL12,
    CG_BINORMAL13,
    CG_BINORMAL14,
    CG_BINORMAL15,
    CG_FOG0 = 2917,
    CG_FOG1,
    CG_FOG2,
    CG_FOG3,
    CG_FOG4,
    CG_FOG5,
    CG_FOG6,
    CG_FOG7,
    CG_FOG8,
    CG_FOG9,
    CG_FOG10,
    CG_FOG11,
    CG_FOG12,
    CG_FOG13,
    CG_FOG14,
    CG_FOG15,
    CG_DEPTH0,
    CG_DEPTH1,
    CG_DEPTH2,
    CG_DEPTH3,
    CG_DEPTH4,
    CG_DEPTH5,
    CG_DEPTH6,
    CG_DEPTH7,
    CG_DEPTH8,
    CG_DEPTH9,
    CG_DEPTH10,
    CG_DEPTH11,
    CG_DEPTH12,
    CG_DEPTH13,
    CG_DEPTH14,
    CG_DEPTH15,
    CG_SAMPLE0,
    CG_SAMPLE1,
    CG_SAMPLE2,
    CG_SAMPLE3,
    CG_SAMPLE4,
    CG_SAMPLE5,
    CG_SAMPLE6,
    CG_SAMPLE7,
    CG_SAMPLE8,
    CG_SAMPLE9,
    CG_SAMPLE10,
    CG_SAMPLE11,
    CG_SAMPLE12,
    CG_SAMPLE13,
    CG_SAMPLE14,
    CG_SAMPLE15,
    CG_BLENDWEIGHT0 = 3028,
    CG_BLENDWEIGHT1,
    CG_BLENDWEIGHT2,
    CG_BLENDWEIGHT3,
    CG_BLENDWEIGHT4,
    CG_BLENDWEIGHT5,
    CG_BLENDWEIGHT6,
    CG_BLENDWEIGHT7,
    CG_BLENDWEIGHT8,
    CG_BLENDWEIGHT9,
    CG_BLENDWEIGHT10,
    CG_BLENDWEIGHT11,
    CG_BLENDWEIGHT12,
    CG_BLENDWEIGHT13,
    CG_BLENDWEIGHT14,
    CG_BLENDWEIGHT15,
    CG_NORMAL0 = 3092,
    CG_NORMAL1,
    CG_NORMAL2,
    CG_NORMAL3,
    CG_NORMAL4,
    CG_NORMAL5,
    CG_NORMAL6,
    CG_NORMAL7,
    CG_NORMAL8,
    CG_NORMAL9,
    CG_NORMAL10,
    CG_NORMAL11,
    CG_NORMAL12,
    CG_NORMAL13,
    CG_NORMAL14,
    CG_NORMAL15,
    CG_FOGCOORD = 3156,
    CG_TEXCOORD0 = 3220,
    CG_TEXCOORD1,
    CG_TEXCOORD2,
    CG_TEXCOORD3,
    CG_TEXCOORD4,
    CG_TEXCOORD5,
    CG_TEXCOORD6,
    CG_TEXCOORD7,
    CG_TEXCOORD8,
    CG_TEXCOORD9,
    CG_TEXCOORD10,
    CG_TEXCOORD11,
    CG_TEXCOORD12,
    CG_TEXCOORD13,
    CG_TEXCOORD14,
    CG_TEXCOORD15,
    CG_COMBINER_CONST0 = 3284,
    CG_COMBINER_CONST1,
    CG_COMBINER_STAGE_CONST0,
    CG_COMBINER_STAGE_CONST1,
    CG_OFFSET_TEXTURE_MATRIX,
    CG_OFFSET_TEXTURE_SCALE,
    CG_OFFSET_TEXTURE_BIAS,
    CG_CONST_EYE,
    CG_COVERAGE,
    CG_TESSFACTOR = 3255,
    CG_GLSL_UNIFORM = 3300,
    CG_GLSL_ATTRIB,
    CG_ENV,
    CG_HLSL_UNIFORM = 3559,
    CG_HLSL_VARYING,
    CG_SAMPLER_RES,
    CG_LASTCOL0 = 4400,
    CG_LASTCOL1,
    CG_LASTCOL2,
    CG_LASTCOL3,
    CG_LASTCOL4,
    CG_LASTCOL5,
    CG_LASTCOL6,
    CG_LASTCOL7,
    CG_FACE = 4410,
    CG_PRIMITIVEID,
    CG_INSTANCEID,
    CG_SAMPLEID,
    CG_VERTEXID,
    CG_LAYER,
    CG_SAMPLEMASK,
    CG_UNDEFINED = 3256,
}
alias int CGresource;




enum
{
    CG_PROFILE_START = 6144,
    CG_PROFILE_UNKNOWN,
    CG_PROFILE_VP20,
    CG_PROFILE_FP20,
    CG_PROFILE_VP30,
    CG_PROFILE_FP30,
    CG_PROFILE_ARBVP1,
    CG_PROFILE_FP40,
    CG_PROFILE_ARBFP1 = 7000,
    CG_PROFILE_VP40,
    CG_PROFILE_GLSLV = 7007,
    CG_PROFILE_GLSLF,
    CG_PROFILE_GLSLC,
    CG_PROFILE_GPU_FP,
    CG_PROFILE_GPU_VP,
    CG_PROFILE_GPU_GP,
    CG_PROFILE_VS_1_1 = 6153,
    CG_PROFILE_VS_2_0,
    CG_PROFILE_VS_2_X,
    CG_PROFILE_VS_2_SW,
    CG_PROFILE_VS_3_0,
    CG_PROFILE_HLSLV,
    CG_PROFILE_PS_1_1,
    CG_PROFILE_PS_1_2,
    CG_PROFILE_PS_1_3,
    CG_PROFILE_PS_2_0,
    CG_PROFILE_PS_2_X,
    CG_PROFILE_PS_2_SW,
    CG_PROFILE_PS_3_0,
    CG_PROFILE_HLSLF,
    CG_PROFILE_GENERIC = 7002,
    CG_PROFILE_MAX = 7100,
}
alias int CGprofile;



enum
{
    CG_NO_ERROR,
    CG_COMPILER_ERROR,
    CG_INVALID_PARAMETER_ERROR,
    CG_INVALID_PROFILE_ERROR,
    CG_PROGRAM_LOAD_ERROR,
    CG_PROGRAM_BIND_ERROR,
    CG_PROGRAM_NOT_LOADED_ERROR,
    CG_UNSUPPORTED_GL_EXTENSION_ERROR,
    CG_INVALID_VALUE_TYPE_ERROR,
    CG_NOT_MATRIX_PARAM_ERROR,
    CG_INVALID_ENUMERANT_ERROR,
    CG_NOT_4x4_MATRIX_ERROR,
    CG_FILE_READ_ERROR,
    CG_FILE_WRITE_ERROR,
    CG_NVPARSE_ERROR,
    CG_MEMORY_ALLOC_ERROR,
    CG_INVALID_CONTEXT_HANDLE_ERROR,
    CG_INVALID_PROGRAM_HANDLE_ERROR,
    CG_INVALID_PARAM_HANDLE_ERROR,
    CG_UNKNOWN_PROFILE_ERROR,
    CG_VAR_ARG_ERROR,
    CG_INVALID_DIMENSION_ERROR,
    CG_ARRAY_PARAM_ERROR,
    CG_OUT_OF_ARRAY_BOUNDS_ERROR,
    CG_CONFLICTING_TYPES_ERROR,
    CG_CONFLICTING_PARAMETER_TYPES_ERROR,
    CG_PARAMETER_IS_NOT_SHARED_ERROR,
    CG_INVALID_PARAMETER_VARIABILITY_ERROR,
    CG_CANNOT_DESTROY_PARAMETER_ERROR,
    CG_NOT_ROOT_PARAMETER_ERROR,
    CG_PARAMETERS_DO_NOT_MATCH_ERROR,
    CG_IS_NOT_PROGRAM_PARAMETER_ERROR,
    CG_INVALID_PARAMETER_TYPE_ERROR,
    CG_PARAMETER_IS_NOT_RESIZABLE_ARRAY_ERROR,
    CG_INVALID_SIZE_ERROR,
    CG_BIND_CREATES_CYCLE_ERROR,
    CG_ARRAY_TYPES_DO_NOT_MATCH_ERROR,
    CG_ARRAY_DIMENSIONS_DO_NOT_MATCH_ERROR,
    CG_ARRAY_HAS_WRONG_DIMENSION_ERROR,
    CG_TYPE_IS_NOT_DEFINED_IN_PROGRAM_ERROR,
    CG_INVALID_EFFECT_HANDLE_ERROR,
    CG_INVALID_STATE_HANDLE_ERROR,
    CG_INVALID_STATE_ASSIGNMENT_HANDLE_ERROR,
    CG_INVALID_PASS_HANDLE_ERROR,
    CG_INVALID_ANNOTATION_HANDLE_ERROR,
    CG_INVALID_TECHNIQUE_HANDLE_ERROR,
    CG_INVALID_PARAMETER_HANDLE_ERROR,
    CG_STATE_ASSIGNMENT_TYPE_MISMATCH_ERROR,
    CG_INVALID_FUNCTION_HANDLE_ERROR,
    CG_INVALID_TECHNIQUE_ERROR,
    CG_INVALID_POINTER_ERROR,
    CG_NOT_ENOUGH_DATA_ERROR,
    CG_NON_NUMERIC_PARAMETER_ERROR,
    CG_ARRAY_SIZE_MISMATCH_ERROR,
    CG_CANNOT_SET_NON_UNIFORM_PARAMETER_ERROR,
    CG_DUPLICATE_NAME_ERROR,
    CG_INVALID_OBJ_HANDLE_ERROR,
    CG_INVALID_BUFFER_HANDLE_ERROR,
    CG_BUFFER_INDEX_OUT_OF_RANGE_ERROR,
    CG_BUFFER_ALREADY_MAPPED_ERROR,
    CG_BUFFER_UPDATE_NOT_ALLOWED_ERROR,
}
alias int CGerror;



enum
{
    CG_UNKNOWN = 4096,
    CG_IN,
    CG_OUT,
    CG_INOUT,
    CG_MIXED,
    CG_VARYING,
    CG_UNIFORM,
    CG_CONSTANT,
    CG_PROGRAM_SOURCE,
    CG_PROGRAM_ENTRY,
    CG_COMPILED_PROGRAM,
    CG_PROGRAM_PROFILE,
    CG_GLOBAL,
    CG_PROGRAM,
    CG_DEFAULT,
    CG_ERROR,
    CG_SOURCE,
    CG_OBJECT,
    CG_COMPILE_MANUAL,
    CG_COMPILE_IMMEDIATE,
    CG_COMPILE_LAZY,
    CG_CURRENT,
    CG_LITERAL,
    CG_VERSION,
    CG_ROW_MAJOR,
    CG_COLUMN_MAJOR,
    CG_FRAGMENT,
    CG_VERTEX,
    CG_POINT,
    CG_LINE,
    CG_LINE_ADJ,
    CG_TRIANGLE,
    CG_TRIANGLE_ADJ,
    CG_POINT_OUT,
    CG_LINE_OUT,
    CG_TRIANGLE_OUT,
    CG_IMMEDIATE_PARAMETER_SETTING,
    CG_DEFERRED_PARAMETER_SETTING,
    CG_NO_LOCKS_POLICY,
    CG_THREAD_SAFE_POLICY,
    CG_FORCE_UPPER_CASE_POLICY,
    CG_UNCHANGED_CASE_POLICY,
}
alias int CGenum;




enum
{
    CG_PARAMETERCLASS_UNKNOWN,
    CG_PARAMETERCLASS_SCALAR,
    CG_PARAMETERCLASS_VECTOR,
    CG_PARAMETERCLASS_MATRIX,
    CG_PARAMETERCLASS_STRUCT,
    CG_PARAMETERCLASS_ARRAY,
    CG_PARAMETERCLASS_SAMPLER,
    CG_PARAMETERCLASS_OBJECT,
}
alias int CGparameterclass;



enum
{
    CG_UNKNOWN_DOMAIN,
    CG_FIRST_DOMAIN,
    CG_VERTEX_DOMAIN = 1,
    CG_FRAGMENT_DOMAIN,
    CG_GEOMETRY_DOMAIN,
    CG_NUMBER_OF_DOMAINS,
}
alias int CGdomain;



enum
{
    CG_MAP_READ,
    CG_MAP_WRITE,
    CG_MAP_READ_WRITE,
    CG_MAP_WRITE_DISCARD,
    CG_MAP_WRITE_NO_OVERWRITE,
}
alias int CGbufferaccess;



enum
{
    CG_BUFFER_USAGE_STREAM_DRAW,
    CG_BUFFER_USAGE_STREAM_READ,
    CG_BUFFER_USAGE_STREAM_COPY,
    CG_BUFFER_USAGE_STATIC_DRAW,
    CG_BUFFER_USAGE_STATIC_READ,
    CG_BUFFER_USAGE_STATIC_COPY,
    CG_BUFFER_USAGE_DYNAMIC_DRAW,
    CG_BUFFER_USAGE_DYNAMIC_READ,
    CG_BUFFER_USAGE_DYNAMIC_COPY,
}
alias int CGbufferusage;



enum
{
    CG_GL_MATRIX_IDENTITY,
    CG_GL_MATRIX_TRANSPOSE,
    CG_GL_MATRIX_INVERSE,
    CG_GL_MATRIX_INVERSE_TRANSPOSE,
    CG_GL_MODELVIEW_MATRIX,
    CG_GL_PROJECTION_MATRIX,
    CG_GL_TEXTURE_MATRIX,
    CG_GL_MODELVIEW_PROJECTION_MATRIX,
    CG_GL_VERTEX,
    CG_GL_FRAGMENT,
    CG_GL_GEOMETRY,
}
alias int CGGLenum;



extern (C):

alias CGbool  function(CGstateassignment )CGstatecallback;
alias void  function()CGerrorCallbackFunc;
alias void  function(CGcontext ctx, CGerror err, void *data)CGerrorHandlerFunc;
